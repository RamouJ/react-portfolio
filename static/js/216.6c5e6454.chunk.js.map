{"version":3,"file":"static/js/216.6c5e6454.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/icons/esm/Brightness4.js","../node_modules/@material-ui/icons/esm/Brightness7.js","components/theme/ThemeToggle.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z\"\n}), 'Brightness4');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\"\n}), 'Brightness7');","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"./ThemeProvider\";\nimport { Tooltip, IconButton, Zoom } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Brightness4, Brightness7 } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    position: \"fixed\",\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n    height: \"2.5rem\",\n    width: \"2.5rem\",\n  },\n  icon: {\n    fontSize: \"1.25rem\",\n  },\n}));\n\nexport const ThemeToggle = () => {\n    const { theme, toggleTheme } = useContext(ThemeContext);\n    const classes = useStyles();\n\n    return (\n      <Tooltip\n        title={\"Toggle theme\"}\n        placement=\"right\"\n        TransitionComponent={Zoom}\n      >\n        <IconButton\n          color=\"inherit\"\n          onClick={toggleTheme}\n          aria-label={\"Toggle theme\"}\n          className={classes.iconButton}\n        >\n          {theme === \"light\" ? (\n              <Brightness4 className={classes.icon} />\n          ) : (\n              <Brightness7 className={classes.icon} />\n          )}\n        </IconButton>\n      </Tooltip>\n    );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), function (props) {\n    var fontSize = props.fontSize;\n\n    if (fontSize === 'default') {\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}"],"names":["createSvgIcon","React","d","useStyles","makeStyles","theme","iconButton","position","bottom","spacing","right","height","width","icon","fontSize","ThemeToggle","useContext","ThemeContext","toggleTheme","classes","Tooltip","title","placement","TransitionComponent","Zoom","IconButton","color","onClick","className","Brightness4","Brightness7","props","ref","_props$edge","edge","children","_props$color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","label","withStyles","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","display","alignItems","justifyContent","name","SvgIcon","_props$component","component","Component","_props$fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","focusable","undefined","role","muiName","userSelect","fill","flexShrink","shorter","colorAction","colorError","error","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","path","displayName"],"sourceRoot":""}