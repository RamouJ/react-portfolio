{"version":3,"file":"static/js/836.245395ea.chunk.js","mappings":"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","sources":["components/content/SocialIcons.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import React from 'react';\nimport { Link, Tooltip, IconButton, Zoom } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Resume from '../../settings/resume.json';\n\nconst useStyles = makeStyles((theme) => ({\n  socialIcons: {\n    position: 'fixed',\n    top: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n  iconButton: {\n    height: '2.5rem',\n    width: '2.5rem',\n    display: 'block',\n    marginBottom: theme.spacing(2),\n  },\n  icon: {\n    fontSize: '1.25rem',\n  },\n}));\n\nexport const SocialIcons = () => {\n  const classes = useStyles();\n\n  const socialItems = Resume.basics.profiles.map((socialItem) => (\n    <Link\n      href={socialItem.url}\n      key={socialItem.network.toLowerCase()}\n      target='_blank'\n      rel='noopener noreferrer'\n      underline='none'\n      color='inherit'\n    >\n      <Tooltip\n        title={socialItem.username}\n        placement='left'\n        TransitionComponent={Zoom}\n      >\n        <IconButton\n          color='inherit'\n          aria-label={socialItem.network}\n          className={classes.iconButton}\n        >\n          <i className={`${classes.icon} ${socialItem.x_icon}`}></i>\n        </IconButton>\n      </Tooltip>\n    </Link>\n  ));\n\n  return <div className={classes.socialIcons}>{socialItems}</div>;\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["useStyles","makeStyles","theme","socialIcons","position","top","spacing","right","iconButton","height","width","display","marginBottom","icon","fontSize","SocialIcons","classes","socialItems","Resume","socialItem","href","url","target","rel","underline","color","title","username","placement","TransitionComponent","Zoom","network","className","x_icon","toLowerCase","IconButton","React","props","ref","_props$edge","edge","children","_props$color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","label","withStyles","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","alignItems","justifyContent","name","Link","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","variant","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","border","margin","cursor","userSelect","verticalAlign","borderStyle","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","Component","caption","overline","srOnly","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"sourceRoot":""}