{"version":3,"file":"static/js/885.a148ba56.chunk.js","mappings":"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","sources":["components/theme/Themes.js","components/theme/ThemeProvider.js","../node_modules/@material-ui/core/esm/styles/cssUtils.js","../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js","../node_modules/@material-ui/core/node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js"],"sourcesContent":["import { createTheme, responsiveFontSizes } from '@material-ui/core';\nimport Settings from '../../settings/settings.json';\n\nexport const primary = `${Settings.colors.primary}`;\nexport const secondary = `${Settings.colors.secondary}`;\nexport const black = `${Settings.colors.black}`;\nexport const white = `${Settings.colors.white}`;\n\nexport const LightTheme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        main: primary,\n      },\n      secondary: {\n        main: secondary,\n      },\n      background: {\n        default: white,\n      },\n      foreground: {\n        default: black,\n      },\n    },\n    typography: {\n      fontSize: 16,\n      htmlFontSize: 16,\n      h1: {\n        fontWeight: 500,\n      },\n      h2: {\n        fontWeight: 500,\n      },\n      h3: {\n        fontWeight: 500,\n      },\n      h5: {\n        fontWeight: 500,\n        fontFamily: 'Roboto Mono, monospace',\n      },\n      body: {\n        fontWeight: 500,\n        fontFamily: 'Roboto Mono, monospace',\n      }\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          body: {\n            color: black,\n            backgroundColor: white,\n          },\n          a:  {\n            color: black,\n            backgroundColor: white,\n          },\n        },\n      },\n      MuiIconButton: {\n        root: {\n          boxShadow:\n            '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n          '&:hover': {\n            backgroundColor: primary,\n          },\n          transition: 'all 0.5s ease',\n        },\n      },\n      MuiFab: {\n        root: {\n          width: '2.5rem',\n          height: '2.5rem',\n          fontSize: '1.25rem',\n        },\n        primary: {\n          color: black,\n          backgroundColor: 'transparent',\n          '&:hover': {\n            color: black,\n            backgroundColor: primary,\n          },\n          transition: 'all 0.5s ease !important',\n        },\n      },\n      MuiSpeedDialAction: {\n        fab: {\n          color: white,\n          backgroundColor: 'transparent',\n          '&:hover': {\n            color: white,\n            backgroundColor: primary,\n          },\n          transition: 'all 0.5s ease',\n          margin: '0px',\n          marginBottom: '16px',\n        },\n      },\n      MuiTooltip: {\n        tooltip: {\n          fontFamily: 'Roboto Mono, monospace',\n          backgroundColor: primary,\n          color: black,\n          fontSize: 12,\n        },\n      },\n    },\n  })\n);\n\nexport const DarkTheme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: primary,\n      },\n      secondary: {\n        main: secondary,\n      },\n      background: {\n        default: black,\n      },\n      foreground: {\n        default: white,\n      },\n    },\n    typography: {\n      fontSize: 16,\n      htmlFontSize: 16,\n      h1: {\n        fontWeight: 500,\n      },\n      h2: {\n        fontWeight: 500,\n      },\n      h3: {\n        fontWeight: 500,\n      },\n      h5: {\n        fontWeight: 500,\n        fontFamily: 'Roboto Mono, monospace',\n      },\n      body: {\n        fontWeight: 500,\n        fontFamily: 'Roboto Mono, monospace',\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          body: {\n            color: white,\n            backgroundColor: black,\n          },\n          a:  {\n            color: white\n          },\n        },\n      },\n      MuiIconButton: {\n        root: {\n          boxShadow:\n            '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n          '&:hover': {\n            backgroundColor: primary,\n          },\n          transition: 'all 0.5s ease',\n        },\n      },\n      MuiFab: {\n        root: {\n          width: '2.5rem',\n          height: '2.5rem',\n          fontSize: '1.25rem',\n        },\n        primary: {\n          color: white,\n          backgroundColor: 'transparent',\n          '&:hover': {\n            color: white,\n            backgroundColor: primary,\n          },\n          transition: 'all 0.5s ease !important',\n        },\n      },\n      MuiSpeedDialAction: {\n        fab: {\n          color: white,\n          backgroundColor: 'transparent',\n          '&:hover': {\n            color: white,\n            backgroundColor: primary,\n          },\n          transition: 'all 0.5s ease',\n          margin: '0px',\n          marginBottom: '16px',\n        },\n      },\n      MuiTooltip: {\n        tooltip: {\n          fontFamily: 'Roboto Mono, monospace',\n          backgroundColor: primary,\n          color: white,\n          fontSize: 12,\n        },\n      },\n    },\n  })\n);\n","import React, { useEffect, useState, createContext } from \"react\";\nimport { LightTheme, DarkTheme } from \"./Themes\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n    const getInitialMode = () => {\n        if (typeof localStorage === \"undefined\") return true;\n        const isReturningUser = \"dark\" in localStorage;\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\n        const userPrefersDark = getPrefColorScheme();\n        if (isReturningUser) {\n            return savedMode;\n        }\n        return !!userPrefersDark;\n    };\n\n    const getPrefColorScheme = () => {\n        if (!window.matchMedia) return;\n\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    };\n\n    const [theme, setTheme] = useState(getInitialMode() ? \"dark\" : \"light\");\n\n    const toggleTheme = () => {\n        if (theme === \"light\") {\n            setTheme(\"dark\");\n        } else {\n            setTheme(\"light\");\n        }\n    };\n\n    useEffect(() => {\n        typeof localStorage !== \"undefined\" &&\n            localStorage.setItem(\"dark\", JSON.stringify(theme === \"dark\"));\n    }, [theme]);\n\n    return (\n        <ThemeContext.Provider\n            value={{\n                theme,\n                toggleTheme,\n            }}\n        >\n            <MuiThemeProvider\n                theme={theme === \"light\" ? LightTheme : DarkTheme}\n            >\n                {children}\n            </MuiThemeProvider>\n        </ThemeContext.Provider>\n    );\n};\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return function (length, toUnit) {\n    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    var pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n        return length;\n      }\n    } // Convert length in pixels to the output unit\n\n\n    var outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n\n  var output = _defineProperty({}, cssProperty, \"\".concat(min).concat(unit));\n\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = _defineProperty({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;"],"names":["primary","Settings","secondary","black","white","LightTheme","responsiveFontSizes","createTheme","palette","type","main","background","default","foreground","typography","fontSize","htmlFontSize","h1","fontWeight","h2","h3","h5","fontFamily","body","overrides","MuiCssBaseline","color","backgroundColor","a","MuiIconButton","root","boxShadow","transition","MuiFab","width","height","MuiSpeedDialAction","fab","margin","marginBottom","MuiTooltip","tooltip","DarkTheme","ThemeContext","createContext","ThemeProvider","children","getPrefColorScheme","window","matchMedia","matches","useState","localStorage","isReturningUser","savedMode","JSON","parse","getItem","userPrefersDark","getInitialMode","theme","setTheme","useEffect","setItem","stringify","Provider","value","toggleTheme","isUnitless","String","parseFloat","length","toUnitless","convertLength","baseFontSize","toUnit","fromUnit","match","pxLength","outputLength","toFixed","alignProperty","_ref","size","grid","sizeBelow","sizeAbove","fontGrid","_ref2","lineHeight","pixels","responsiveProperty","_ref3","cssProperty","min","max","_ref3$unit","unit","_ref3$breakpoints","breakpoints","_ref3$transform","transform","output","_defineProperty","concat","factor","forEach","breakpoint","Math","round","themeInput","options","arguments","undefined","_options$breakpoints","_options$disableAlign","disableAlign","_options$factor","_options$variants","variants","_extends","convert","breakpointValues","map","x","values","variant","style","remFontSize","maxFontSize","minFontSize","Error","_formatMuiErrorMessage","props","localTheme","outerTheme","useTheme","React","mergeOuterLocalTheme","nested"],"sourceRoot":""}