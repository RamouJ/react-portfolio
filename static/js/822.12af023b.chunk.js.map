{"version":3,"file":"static/js/822.12af023b.chunk.js","mappings":"yQAYMA,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAK,MAAM,CACvCC,KAAM,CACJC,SAAU,QACVC,UAAW,MACXC,aAAc,OAEhBC,KAAM,CACJC,MAAO,QAETC,UAAW,CACTD,MAAO,OACPF,aAAc,QAEjB,IAIYI,EAAU,WACrB,IAAMC,EAAUX,IAGVO,GAAOK,EAAAA,EAAAA,UAuBX,OACE,oBAASC,GAAG,UAAS,UACnB,SAACC,EAAA,EAAS,CAACC,UAAU,OAAOC,UAAWL,EAAQR,KAAMC,SAAS,KAAI,UAChE,iBAAKY,UAAU,UAAS,WACtB,gBAAKA,UAAU,gBAAe,UAC5B,kBAAMC,IAAKV,EAAMW,SA1BX,SAACC,GACjBA,EAAEC,iBAEFC,EAAAA,GAAAA,SAAiB,kBAAmB,mBAAoBd,EAAKe,QAAS,qBACnEC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAOG,KACvB,IAAG,SAACC,GACAH,QAAQC,IAAIE,EAAMD,KACtB,IACFE,IAAAA,KAAU,CACRC,SAAU,SACVC,KAAM,UACNC,MAAO,0BACPC,mBAAmB,EACnBC,MAAO,OAETf,EAAEgB,OAAOC,OACX,EASkDpB,UAAWL,EAAQJ,KAAK,WAC5D,SAAC8B,EAAA,EAAS,CACRxB,GAAG,sBACHyB,MAAM,OACNC,KAAK,OACLC,KAAK,QACLC,QAAQ,SACRC,KAAK,OACL1B,UAAWL,EAAQF,aAErB,SAAC4B,EAAA,EAAS,CACRxB,GAAG,0BACHyB,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,QAAQ,SACRC,KAAK,QACL1B,UAAWL,EAAQF,aAErB,SAAC4B,EAAA,EAAS,CACRxB,GAAG,0BACHyB,MAAM,UACNC,KAAK,WACLC,KAAK,QACLG,WAAS,EACTC,QAAS,EACTH,QAAQ,SACRC,KAAK,UACL1B,UAAWL,EAAQF,aAErB,oBAAQ8B,KAAK,SAASM,MAAM,OAAO7B,UAAU,aAAY,WACzD,cAAGA,UAAU,qBACX,SAAC8B,EAAA,EAAU,CAAC/B,UAAU,OAAM,oCAIlC,eAAIC,UAAU,cAAa,UACzB,SAAC+B,EAAA,EAAW,CAACpB,KAnEP,uBAyEpB,C,uFCrGMqB,EAAiB,CACnBC,MAAO,CACH,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,SACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJC,SAAU,IAGDH,EAAc,SAACI,GACxB,OAA6BC,EAAAA,EAAAA,GAAYJ,GAAjCxB,EAAM,EAANA,OAAQ6B,EAAQ,EAARA,SAYhB,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAIMC,EAASC,YAJI,WACfH,EAASF,EAAMxB,MAAQ,GAC3B,GAEsC,GAEtC,OAAO,kBAAM8B,aAAaF,EAAQ,CACtC,GAAG,CAACF,EAAUF,EAAMxB,QAGhB,yBACGH,EACA,SAGX,C","sources":["components/contact/Contact.js","components/content/TextDecrypt.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextDecrypt } from \"../content/TextDecrypt\";\nimport Swal from 'sweetalert2';\n\nimport emailjs from '@emailjs/browser';\n\nimport './Contact.css';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    maxWidth: '100vw',\n    marginTop: '3em',\n    marginBottom: \"3em\",\n  },\n  form: {\n    width: '100%',\n  },\n  formfield: {\n    width: '100%',\n    marginBottom: '2rem',\n  },\n}));\n\n\n\nexport const Contact = () => {\n  const classes = useStyles();\n  const greetings = \"Say hello.\";\n\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs.sendForm('service_opg1h1g', 'template_n463xbj', form.current, 'TmIeOsFWFohsiO69O')\n      .then((result) => {\n          console.log(result.text);\n      }, (error) => {\n          console.log(error.text);\n      });\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'You have sent an email!',\n      showConfirmButton: false,\n      timer: 1500\n    })\n    e.target.reset()\n  };\n\n\n\n    return (\n      <section id=\"contact\">\n        <Container component=\"main\" className={classes.main} maxWidth=\"md\">\n          <div className=\"contact\">\n            <div className=\"_form_wrapper\">\n              <form ref={form} onSubmit={sendEmail} className={classes.form}>\n                <TextField\n                  id=\"outlined-name-input\"\n                  label=\"Name\"\n                  type=\"text\"\n                  size=\"small\"\n                  variant=\"filled\"\n                  name=\"name\"\n                  className={classes.formfield}\n                />\n                <TextField\n                  id=\"outlined-password-input\"\n                  label=\"Email\"\n                  type=\"email\"\n                  size=\"small\"\n                  variant=\"filled\"\n                  name=\"email\"\n                  className={classes.formfield}\n                />\n                <TextField\n                  id=\"outlined-password-input\"\n                  label=\"Message\"\n                  type=\"textarea\"\n                  size=\"small\"\n                  multiline\n                  minRows={5}\n                  variant=\"filled\"\n                  name=\"message\"\n                  className={classes.formfield}\n                />\n                <button type=\"submit\" value=\"Send\" className=\"submit-btn\">\n                <i className=\"fas fa-terminal\"></i>\n                  <Typography component='span'> Send Message</Typography>\n                </button>\n              </form>\n            </div>\n            <h1 className=\"contact_msg\">\n              <TextDecrypt text={greetings}/>\n            </h1>\n          </div>\n        </Container>\n      </section>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDencrypt } from \"use-dencrypt-effect\";\n\nconst decryptOptions = {\n    chars: [\n        \"-\",\n        \".\",\n        \"/\",\n        \"*\",\n        \"!\",\n        \"?\",\n        \"#\",\n        \"%\",\n        \"&\",\n        \"@\",\n        \"$\",\n        \"€\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"~\",\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"i\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"m\",\n        \"n\",\n        \"o\",\n        \"p\",\n        \"q\",\n        \"r\",\n        \"s\",\n        \"t\",\n        \"u\",\n        \"v\",\n        \"w\",\n        \"x\",\n        \"y\",\n        \"z\",\n    ],\n    interval: 50,\n};\n\nexport const TextDecrypt = (props) => {\n    const { result, dencrypt } = useDencrypt(decryptOptions);\n\n    useEffect(() => {\n        const updateText = () => {\n            dencrypt(props.text || \"\");\n        };\n\n        const action = setTimeout(updateText, 0);\n\n        return () => clearTimeout(action);\n    }, [dencrypt, props.text]);\n\n    return (\n        <p>\n          {result}\n          {\" \"}\n        </p>\n    );\n};\n"],"names":["useStyles","makeStyles","theme","main","maxWidth","marginTop","marginBottom","form","width","formfield","Contact","classes","useRef","id","Container","component","className","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","text","error","Swal","position","icon","title","showConfirmButton","timer","target","reset","TextField","label","type","size","variant","name","multiline","minRows","value","Typography","TextDecrypt","decryptOptions","chars","interval","props","useDencrypt","dencrypt","useEffect","action","setTimeout","clearTimeout"],"sourceRoot":""}